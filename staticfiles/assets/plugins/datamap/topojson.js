topojson=function(){function t(t,n){var r={type:"Feature",id:n.id,properties:n.properties||{},geometry:e(t,n)};return null==n.id&&delete r.id,r}function e(t,e){var n=t.transform,r=n.scale[0],o=n.scale[1],a=n.translate[0],i=n.translate[1],u=t.arcs;function c(t,e){e.length&&e.pop();for(var n,c=u[t<0?~t:t],s=0,f=c.length,l=0,d=0;s<f;++s)e.push([(l+=(n=c[s])[0])*r+a,(d+=n[1])*o+i]);t<0&&function(t,e){var n,r=t.length,o=r-e;for(;o<--r;)n=t[o],t[o++]=t[r],t[r]=n}(e,f)}function s(t){return[t[0]*r+a,t[1]*o+i]}function f(t){for(var e=[],n=0,r=t.length;n<r;++n)c(t[n],e);return e.length<2&&e.push(e[0]),e}function l(t){for(var e=f(t);e.length<4;)e.push(e[0]);return e}function d(t){return t.map(l)}var p={Point:function(t){return s(t.coordinates)},MultiPoint:function(t){return t.coordinates.map(s)},LineString:function(t){return f(t.arcs)},MultiLineString:function(t){return t.arcs.map(f)},Polygon:function(t){return d(t.arcs)},MultiPolygon:function(t){return t.arcs.map(d)}};return function t(e){var n=e.type;return"GeometryCollection"===n?{type:n,geometries:e.geometries.map(t)}:n in p?{type:n,coordinates:p[n](e)}:null}(e)}function n(t,e){for(var n=0,r=t.length;n<r;){var o=n+r>>>1;t[o]<e?n=o+1:r=o}return n}return{version:"1.1.3",mesh:function(t,n,r){var o=[];if(arguments.length>1){var a,i=[];function u(t){t<0&&(t=~t),(i[t]||(i[t]=[])).push(a)}function c(t){t.forEach(u)}function s(t){t.forEach(c)}var f={LineString:c,MultiLineString:s,Polygon:s,MultiPolygon:function(t){t.forEach(s)}};!function t(e){"GeometryCollection"===e.type?e.geometries.forEach(t):e.type in f&&(a=e,f[e.type](e.arcs))}(n),i.forEach(arguments.length<3?function(t,e){o.push(e)}:function(t,e){r(t[0],t[t.length-1])&&o.push(e)})}else for(var l=0,d=t.arcs.length;l<d;++l)o.push(l);return e(t,{type:"MultiLineString",arcs:function(t,e){var n={},r={},o={};function a(e){var n=t.arcs[e],r=n[0],o=[0,0];return n.forEach(function(t){o[0]+=t[0],o[1]+=t[1]}),[r,o]}e.forEach(function(t){var e=a(t);(n[e[0]]||(n[e[0]]=[])).push(t),(n[e[1]]||(n[e[1]]=[])).push(~t)}),e.forEach(function(t){var e,n,i=a(t),u=i[0],c=i[1];if(e=o[u])if(delete o[e.end],e.push(t),e.end=c,n=r[c]){delete r[n.start];var s=n===e?e:e.concat(n);r[s.start=e.start]=o[s.end=n.end]=s}else(n=o[c])?(delete r[n.start],delete o[n.end],s=e.concat(n.map(function(t){return~t}).reverse()),r[s.start=e.start]=o[s.end=n.start]=s):r[e.start]=o[e.end]=e;else if(e=r[c])if(delete r[e.start],e.unshift(t),e.start=u,n=o[u]){delete o[n.end];var f=n===e?e:n.concat(e);r[f.start=n.start]=o[f.end=e.end]=f}else(n=r[u])?(delete r[n.start],delete o[n.end],f=n.map(function(t){return~t}).reverse().concat(e),r[f.start=n.end]=o[f.end=e.end]=f):r[e.start]=o[e.end]=e;else(e=r[u])?(delete r[e.start],e.unshift(~t),e.start=c,(n=o[c])?(delete o[n.end],f=n===e?e:n.concat(e),r[f.start=n.start]=o[f.end=e.end]=f):(n=r[c])?(delete r[n.start],delete o[n.end],f=n.map(function(t){return~t}).reverse().concat(e),r[f.start=n.end]=o[f.end=e.end]=f):r[e.start]=o[e.end]=e):(e=o[c])?(delete o[e.end],e.push(~t),e.end=u,(n=o[u])?(delete r[n.start],s=n===e?e:e.concat(n),r[s.start=e.start]=o[s.end=n.end]=s):(n=r[u])?(delete r[n.start],delete o[n.end],s=e.concat(n.map(function(t){return~t}).reverse()),r[s.start=e.start]=o[s.end=n.start]=s):r[e.start]=o[e.end]=e):r[(e=[t]).start=u]=o[e.end=c]=e});var i=[];for(var u in o)i.push(o[u]);return i}(t,o)})},feature:function(e,n){return"GeometryCollection"===n.type?{type:"FeatureCollection",features:n.geometries.map(function(n){return t(e,n)})}:t(e,n)},neighbors:function(t){var e=[],r=t.map(function(){return[]});function o(t,o){t.forEach(function(t){t<0&&(t=~t);var a=e[t]||(e[t]=[]);a[o]||(a.forEach(function(t){var e,a;a=n(e=r[o],t),e[a]!==t&&e.splice(a,0,t),a=n(e=r[t],o),e[a]!==o&&e.splice(a,0,o)}),a[o]=o)})}function a(t,e){t.forEach(function(t){o(t,e)})}var i={LineString:o,MultiLineString:a,Polygon:a,MultiPolygon:function(t,e){t.forEach(function(t){a(t,e)})}};return t.forEach(function t(e,n){"GeometryCollection"===e.type?e.geometries.forEach(function(e){t(e,n)}):e.type in i&&i[e.type](e.arcs,n)}),r}}}();